---
title: "Test Results"
format: html
editor: visual
---

#### Load Libraries

```{r}
install.packages("vembedr")
```

```{r, message=FALSE}
library(tidyverse)
library(janitor)
library(vembedr)
```

#### The Story

You test positive for a rare disease that only effects 0.001 (One in one thousand people).

So you ask the doctor:

-   How certain is it that I have this disease?

    -   The test correctly identifies 99% of people that have the disease and only incorrectly identifies 1% of people that don't have the disease

What are the chances that you actually have this disease?

-   Some would say 99%, the accuracy of the test

    -   What does bayes say?

$$
P(B \mid A) = \frac{P(B) L(B \mid A)}{P(A)} 
$$

B \<- Has Disease

A \<- Positive test result

P(B\|A) - The probability of having the disease given a positive test result

#### Simulate the Data

```{r}

set.seed(70)  # For reproducibility

# Parameters
n_patients <- 10000  # Total population size
n_diseased <- 10     # Number of patients with the disease
sensitivity <- 0.99  # True positive rate (sensitivity)
false_positive_rate <- 0.01  # False positive rate

# Step 1: Create the DataFrame with patients
patients <- data.frame(
  patient_id = 1:n_patients,
  has_disease = c(rep(1, n_diseased), rep(0, n_patients - n_diseased))  # 10 with the disease, rest without
)

# Shuffle the DataFrame to randomize patient order
patients <- patients %>%
  sample_frac(size = 1)

# Step 2: Simulate the test results based on disease status
patients <- patients %>%
  mutate(
    # Test result is positive if the person has the disease and the test is sensitive,
    # or if they don't have the disease but it's a false positive
    test_result = case_when(
      has_disease == 1 & rbinom(n_patients, size = 1, prob = sensitivity) == 1 ~ "positive",
      has_disease == 0 & rbinom(n_patients, size = 1, prob = false_positive_rate) == 1 ~ "positive",
      TRUE ~ "negative"
    )
  )





```

#### Apply Bayes Theorem in Class

```{r}
#look for p(b|a) = probability that someone has the disease given that the test result is positive

# p(b) = the probability that somone has the disease
patients %>%
  tabyl(has_disease)

# p(a) = the probability that the test result is positive
patients %>%
  tabyl(test_result)

probability_has_disease <- 0.999

probability_positive_test_result <- 0.0112

#probability_


#working
patients %>%
  tabyl(has_disease, test_result) %>%
  adorn_percentages("row") #not row 

likelihood <- 1.00000000
  
#finding p(b|a)
(probability_has_disease * likelihood) / probability_positive_test_result

(probability_has_disease * probability_positive_test_result) / likelihood
```

#### Video

```{r}
embed_url("https://www.youtube.com/watch?v=R13BD8qKeTg")
```

#### What about two positive test results?

$$
P(\text{have disease} \mid \text{positive second test}) = \frac{P(\text{have disease after first positive}) \cdot P(\text{positive second test} \mid \text{have disease})}{P(\text{positive second test})}
$$

#### notes about youtube video and thoughts

-   something that would have to change from the previous example of the 8/9% of p(b\|a) which is the probability that someone has the disease given that the test result is positive would be the formula

-   instead of p(b\|a), i believe maybe the b or the a would change when trying to see what would happen if you test positive again

-   I think we would switch either the 0.999 or the 0.0112 would be changed in the new equation, but im not sure which one would
